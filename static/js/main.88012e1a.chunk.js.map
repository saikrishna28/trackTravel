{"version":3,"sources":["Components/Drawer/DrawerComponent.tsx","Components/Header/Header.tsx","Components/AppPage/AppPage.tsx","Components/AddEntry/AddEntry.tsx","Components/VehiclesDetails/VehiclesDetails.tsx","Components/ConsolidatedReport/ConsolidatedReport.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DrawerComponent","props","history","useHistory","toggleDrawer","open","event","type","key","setDrawerState","openScreen","screen","push","Drawer","anchor","drawerOpen","onClose","Toolbar","Divider","Box","sx","width","role","onClick","onKeyDown","List","ListItem","disablePadding","ListItemButton","ListItemIcon","AddBoxOutlined","ListItemText","primary","ArticleOutlined","DirectionsCarFilledOutlined","Header","flexGrow","AppBar","IconButton","size","edge","color","mr","Typography","variant","component","Badge","badgeContent","console","log","AppPage","useState","drawerState","className","children","AddEntry","custName","setCustName","custNum","setCustNum","custId","setCustId","journeyFrom","setJourneyFrom","journeyTo","setJourneyTo","journeyDate","setJourneyDate","vehicleNum","setVehicleNum","driverName","setDriverName","driverNum","setDriverNum","openingReading","setOpeningReading","endReading","setEndReading","totalReading","setTotalReading","paymentType","setPaymentType","tollFee","setTollFee","kmDriven","setKmDriven","driverBeta","setDriverBeta","advance","setAdvance","parkingFee","setParkingFee","costPerKm","setCostPerKm","totalPay","setTotalPay","netPay","setNetPay","tripData","setTripData","Paper","elevation","TextField","label","value","onChange","newValue","target","InputProps","startAdornment","InputAdornment","position","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","renderInput","params","FormControl","InputLabel","id","Select","labelId","MenuItem","endAdornment","Button","VehiclesDetails","TableContainer","Table","minWidth","TableHead","TableRow","TableCell","TableBody","scope","ConsolidatedReport","createData","name","calories","fat","carbs","protein","a","b","rows","Date","align","map","row","border","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4kBAqGeA,EA7EwD,SACrEC,GAEA,IAAIC,EAAUC,cACRC,EACJ,SAACC,GAAD,OAAmB,SAACC,IAED,YAAfA,EAAMC,MACkC,QAAtCD,EAA8BE,KACS,UAAtCF,EAA8BE,MAInCP,EAAMQ,gBAAe,KAEnBC,EAAa,SAACC,GACH,aAAXA,EACFT,EAAQU,KAAK,aACO,mBAAXD,EACTT,EAAQU,KAAK,mBACO,uBAAXD,GACTT,EAAQU,KAAK,wBAGjB,OACE,eAACC,EAAA,EAAD,CAAQC,OAAO,OAAOT,KAAMJ,EAAMc,WAAYC,QAASZ,IAAvD,UACE,cAACa,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CACEC,GAAI,CAAEC,MAAO,KACbC,KAAK,eACLC,QAASnB,IACToB,UAAWpB,IAJb,SAME,eAACqB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAUC,gBAAc,EAAxB,SACE,eAACC,EAAA,EAAD,CACEL,QAAS,WACPb,EAAW,aAFf,UAKE,cAACmB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,uBAG1B,cAACN,EAAA,EAAD,CAAUC,gBAAc,EAAxB,SACE,eAACC,EAAA,EAAD,CACEL,QAAS,WACPb,EAAW,uBAFf,UAKE,cAACmB,EAAA,EAAD,UACE,cAACI,EAAA,EAAD,MAEF,cAACF,EAAA,EAAD,CAAcC,QAAQ,6BAG1B,cAACN,EAAA,EAAD,CAAUC,gBAAc,EAAxB,SACE,eAACC,EAAA,EAAD,CACEL,QAAS,WACPb,EAAW,mBAFf,UAKE,cAACmB,EAAA,EAAD,UACE,cAACK,EAAA,EAAD,MAEF,cAACH,EAAA,EAAD,CAAcC,QAAQ,2B,iFCjCrBG,G,OA9CsC,SAAClC,GACpD,OACE,cAACkB,EAAA,EAAD,CAAKC,GAAI,CAAEgB,SAAU,GAArB,SACE,cAACC,EAAA,EAAD,UACE,eAACpB,EAAA,EAAD,WACE,cAACqB,EAAA,EAAD,CACEC,KAAK,QACLC,KAAK,QACLC,MAAM,UACN,aAAW,OACXrB,GAAI,CAAEsB,GAAI,GACVnB,QAAS,kBAAMtB,EAAMQ,gBAAe,IANtC,SAQE,cAAC,IAAD,MAEF,cAACkC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAMzB,GAAI,CAAEgB,SAAU,GAAzD,mCAGA,cAACE,EAAA,EAAD,CACEC,KAAK,QACL,aAAW,4BACXE,MAAM,UAHR,SAKE,cAACK,EAAA,EAAD,CAAOC,aAAc,EAAGN,MAAM,QAA9B,SACE,cAAC,IAAD,QAGJ,cAACH,EAAA,EAAD,CACEC,KAAK,QACLC,KAAK,MACL,aAAW,0BACX,gBAAc,8BACd,gBAAc,OACdjB,QAAS,WACPyB,QAAQC,IAAI,gBAEdR,MAAM,UATR,SAWE,cAAC,IAAD,eC5BGS,G,OAhBwC,SAACjD,GACtD,MAAsCkD,oBAAS,GAA/C,mBAAOC,EAAP,KAAoB3C,EAApB,KACA,OACE,sBAAK4C,UAAU,WAAf,UACE,cAAC,EAAD,CACE5C,eAAgB,SAACM,GAAD,OAAyBN,EAAeM,MAE1D,qBAAKsC,UAAU,cAAf,SAA8BpD,EAAMqD,WACpC,cAAC,EAAD,CACEvC,WAAYqC,EACZ3C,eAAgB,SAACM,GAAD,OAAyBN,EAAeM,WCobjDwC,EAjb0C,WACvD,MAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA8BN,mBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAA4BR,mBAAS,IAArC,mBAAOS,EAAP,KAAeC,EAAf,KAEA,EAAsCV,mBAAS,IAA/C,mBAAOW,EAAP,KAAoBC,EAApB,KACA,EAAkCZ,mBAAS,IAA3C,mBAAOa,EAAP,KAAkBC,EAAlB,KACA,EAAsCd,mBAAsB,MAA5D,mBAAOe,EAAP,KAAoBC,EAApB,KAEA,EAAoChB,mBAAS,cAA7C,mBAAOiB,EAAP,KAAmBC,EAAnB,KACA,EAAoClB,mBAAS,IAA7C,mBAAOmB,EAAP,KAAmBC,EAAnB,KACA,EAAkCpB,mBAAS,GAA3C,mBAAOqB,EAAP,KAAkBC,EAAlB,KACA,EAA4CtB,mBAAS,GAArD,oBAAOuB,GAAP,MAAuBC,GAAvB,MACA,GAAoCxB,mBAAS,GAA7C,qBAAOyB,GAAP,MAAmBC,GAAnB,MACA,GAAwC1B,mBAAS,GAAjD,qBAAO2B,GAAP,MAAqBC,GAArB,MAEA,GAAsC5B,mBAAS,QAA/C,qBAAO6B,GAAP,MAAoBC,GAApB,MACA,GAA8B9B,mBAAS,GAAvC,qBAAO+B,GAAP,MAAgBC,GAAhB,MACA,GAAgChC,mBAAS,GAAzC,qBAAOiC,GAAP,MAAiBC,GAAjB,MACA,GAAoClC,mBAAS,GAA7C,qBAAOmC,GAAP,MAAmBC,GAAnB,MACA,GAA8BpC,mBAAS,GAAvC,qBAAOqC,GAAP,MAAgBC,GAAhB,MACA,GAAoCtC,mBAAS,GAA7C,qBAAOuC,GAAP,MAAmBC,GAAnB,MACA,GAAkCxC,mBAAS,GAA3C,qBAAOyC,GAAP,MAAkBC,GAAlB,MACA,GAAgC1C,mBAAS,GAAzC,qBAAO2C,GAAP,MAAiBC,GAAjB,MACA,GAA4B5C,mBAAS,GAArC,qBAAO6C,GAAP,MAAeC,GAAf,MAEA,GAAgC9C,mBAAmB,CACjDK,WACAE,UACAE,SACAE,cACAE,YACAE,cACAE,aACAE,aACAE,YACAE,kBACAE,cACAE,gBACAE,eACAE,WACAE,YACAE,cACAE,WACAE,cACAE,aACAE,YACAE,YArBF,qBAAOE,GAAP,MAAiBC,GAAjB,MAkDA,OADAnD,QAAQC,IAAIiD,IAEV,cAAC,EAAD,UACE,qBAAK7C,UAAU,YAAf,SACE,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,uBAAf,SACE,oBAAIA,UAAU,mBAAd,6BAEF,eAAC+C,EAAA,EAAD,CACEC,UAAW,EACXhD,UAAU,2CAFZ,UAIE,cAACV,EAAA,EAAD,CACEF,MAAM,WACNG,QAAQ,KACRC,UAAU,MACVzB,GAAI,CAAEgB,SAAU,GAJlB,+BAQA,qBAAKiB,UAAU,2BAAf,SACE,gCACE,cAACiD,EAAA,EAAD,CACEjD,UAAU,cACVkD,MAAM,OACN3D,QAAQ,WACR4D,MAAOhD,EACPiD,SAAU,SAACC,GACTjD,EAAYiD,EAASC,OAAOH,UAGhC,cAACF,EAAA,EAAD,CACEjD,UAAU,cACVkD,MAAM,SACN3D,QAAQ,WACRrC,KAAK,SACLiG,MAAO9C,EACPkD,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,kBAGJN,SAAU,SAACC,GACT/C,GAAY+C,EAASC,OAAOH,UAGhC,cAACF,EAAA,EAAD,CACEjD,UAAU,cACVkD,MAAM,WACN3D,QAAQ,WACR4D,MAAO5C,EACP6C,SAAU,SAACC,GACT7C,EAAU6C,EAASC,OAAOH,kBAMpC,eAACJ,EAAA,EAAD,CACEC,UAAW,EACXhD,UAAU,0CAFZ,UAIE,cAACV,EAAA,EAAD,CACEF,MAAM,WACNG,QAAQ,KACRC,UAAU,MACVzB,GAAI,CAAEgB,SAAU,GAJlB,8BAQA,qBAAKiB,UAAU,2BAAf,SACE,gCACE,cAACiD,EAAA,EAAD,CACEjD,UAAU,cACVkD,MAAM,OACN3D,QAAQ,WACR4D,MAAO1C,EACP2C,SAAU,SAACC,GACT3C,EAAe2C,EAASC,OAAOH,UAGnC,cAACF,EAAA,EAAD,CACEjD,UAAU,cACVkD,MAAM,KACN3D,QAAQ,WACR4D,MAAOxC,EACPyC,SAAU,SAACC,GACTzC,EAAayC,EAASC,OAAOH,UAGjC,cAACQ,EAAA,EAAD,CAAsBC,YAAaC,IAAnC,SACE,cAACC,EAAA,EAAD,CACEZ,MAAM,MACNC,MAAOtC,EACPuC,SAAU,SAACC,GACTvC,EAAeuC,IAEjBU,YAAa,SAACC,GAAD,OAAY,cAACf,EAAA,EAAD,eAAee,iBAMlD,eAACjB,EAAA,EAAD,CACEC,UAAW,EACXhD,UAAU,0CAFZ,UAIE,cAACV,EAAA,EAAD,CACEF,MAAM,WACNG,QAAQ,KACRC,UAAU,MACVzB,GAAI,CAAEgB,SAAU,GAJlB,8BAQA,qBAAKiB,UAAU,2BAAf,SACE,gCACE,eAACiE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,GAAG,uBAAf,yBACA,eAACC,EAAA,EAAD,CACEpE,UAAU,cACVqE,QAAQ,uBACRlB,MAAOpC,EACPmC,MAAM,cACNE,SAAU,SAACC,GACTrC,EAAcqC,EAASC,OAAOH,QANlC,UASE,cAACmB,EAAA,EAAD,CAAUnB,MAAO,aAAjB,wBACA,cAACmB,EAAA,EAAD,CAAUnB,MAAO,aAAjB,wBACA,cAACmB,EAAA,EAAD,CAAUnB,MAAO,OAAjB,wBAGJ,cAACF,EAAA,EAAD,CACEjD,UAAU,cACVkD,MAAM,cACN3D,QAAQ,WACR4D,MAAOlC,EACPmC,SAAU,SAACC,GACTnC,EAAcmC,EAASC,OAAOH,UAGlC,cAACF,EAAA,EAAD,CACEjD,UAAU,cACVkD,MAAM,gBACN3D,QAAQ,WACRrC,KAAK,SACLiG,MAAOhC,EACPoC,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,kBAGJN,SAAU,SAACC,GACTjC,GAAciC,EAASC,OAAOH,UASlC,cAACF,EAAA,EAAD,CACEjD,UAAU,cACVkD,MAAM,kBACN3D,QAAQ,WACRrC,KAAK,SACLiG,MAAO9B,GACP+B,SAAU,SAACC,GACT/B,IAAmB+B,EAASC,OAAOH,UAGvC,cAACF,EAAA,EAAD,CACEjD,UAAU,cACVkD,MAAM,cACN3D,QAAQ,WACRrC,KAAK,SACLiG,MAAO5B,GACP6B,SAAU,SAACC,GACT7B,IAAe6B,EAASC,OAAOH,UAGnC,cAACF,EAAA,EAAD,CACEjD,UAAU,cACVkD,MAAM,gBACN3D,QAAQ,WACRrC,KAAK,SACLiG,MAAO1B,GACP2B,SAAU,SAACC,GACT3B,IAAiB2B,EAASC,OAAOH,kBAM3C,eAACJ,EAAA,EAAD,CACEC,UAAW,EACXhD,UAAU,0CAFZ,UAIE,cAACV,EAAA,EAAD,CACEF,MAAM,WACNG,QAAQ,KACRC,UAAU,MACVzB,GAAI,CAAEgB,SAAU,GAJlB,8BAQA,qBAAKiB,UAAU,2BAAf,SACE,gCACE,eAACiE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,GAAG,4BAAf,kBACA,eAACC,EAAA,EAAD,CACEpE,UAAU,cACVqE,QAAQ,4BACRlB,MAAOxB,GACPuB,MAAM,OACNE,SAAU,SAACC,GACTzB,GAAeyB,EAASC,OAAOH,QANnC,UASE,cAACmB,EAAA,EAAD,CAAUnB,MAAO,OAAjB,kBACA,cAACmB,EAAA,EAAD,CAAUnB,MAAO,MAAjB,iBACA,cAACmB,EAAA,EAAD,CAAUnB,MAAO,OAAjB,wBAGJ,cAACF,EAAA,EAAD,CACEjD,UAAU,cACVkD,MAAM,eACN3D,QAAQ,WACRrC,KAAK,SACLiG,MAAOhB,GACPoB,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,qBAGJN,SAAU,SAACC,GACTjB,IAAYiB,EAASC,OAAOH,UAGhC,cAACF,EAAA,EAAD,CACEjD,UAAU,cACVkD,MAAM,eACN3D,QAAQ,WACRrC,KAAK,SACLiG,MAAOtB,GACP0B,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,qBAGJN,SAAU,SAACC,GACTvB,IAAYuB,EAASC,OAAOH,UAGhC,cAACF,EAAA,EAAD,CACEjD,UAAU,cACVkD,MAAM,kBACN3D,QAAQ,WACRrC,KAAK,SACLiG,MAAOd,GACPkB,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,qBAGJN,SAAU,SAACC,GACTf,IAAee,EAASC,OAAOH,UAGnC,cAACF,EAAA,EAAD,CACEjD,UAAU,cACVkD,MAAM,cACN3D,QAAQ,WACRrC,KAAK,SACLiG,MAAOlB,GACPsB,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,qBAGJN,SAAU,SAACC,GACTnB,IAAemB,EAASC,OAAOH,UAGnC,cAACF,EAAA,EAAD,CACEjD,UAAU,cACVkD,MAAM,aACN3D,QAAQ,WACRrC,KAAK,SACLiG,MAAOpB,GACPwB,WAAY,CACVgB,aACE,cAACd,EAAA,EAAD,CAAgBC,SAAS,MAAzB,iBAGJN,SAAU,SAACC,GACTrB,IAAaqB,EAASC,OAAOH,UAGjC,cAACF,EAAA,EAAD,CACEjD,UAAU,cACVkD,MAAM,cACN3D,QAAQ,WACRrC,KAAK,SACLiG,MAAOZ,GACPgB,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,qBAGJN,SAAU,SAACC,GACTb,IAAca,EAASC,OAAOH,UAGlC,cAACF,EAAA,EAAD,CACEjD,UAAU,cACVkD,MAAM,cACN3D,QAAQ,WACRrC,KAAK,SACLiG,MAAOR,GACPY,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,qBAGJN,SAAU,SAACC,GACTT,IAAWS,EAASC,OAAOH,UAG/B,cAACF,EAAA,EAAD,CACEjD,UAAU,cACVkD,MAAM,QACN3D,QAAQ,WACRrC,KAAK,SACLiG,MAAOV,GACPc,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,qBAGJN,SAAU,SAACC,GACTX,IAAaW,EAASC,OAAOH,kBAMvC,cAACqB,EAAA,EAAD,CAAQjF,QAAQ,YAAYrB,QAtXf,WACnB4E,GAAY,CACV3C,WACAE,UACAE,SACAE,cACAE,YACAE,cACAE,aACAE,aACAE,YACAE,kBACAE,cACAE,gBACAE,eACAE,WACAE,YACAE,cACAE,WACAE,cACAE,aACAE,YACAE,aAgWI,4B,gECjRK8B,I,OAxJwD,WACrE,OACE,cAAC,EAAD,UACE,qBAAKzE,UAAU,WAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,cAAC+C,EAAA,EAAD,CACEC,UAAW,EACXhD,UAAU,yCAFZ,SAIE,sBAAKA,UAAU,2BAAf,UACE,sBAAKA,UAAU,6BAAf,UACE,cAACV,EAAA,EAAD,CACEF,MAAM,WACNG,QAAQ,KACRC,UAAU,MACVzB,GAAI,CAAEgB,SAAU,GAJlB,0BAQA,sBAAKiB,UAAU,oCAAf,UACE,cAACiD,EAAA,EAAD,CACEjD,UAAU,cACVkD,MAAM,cACN3D,QAAQ,WACR4D,MAAO,WACPC,SAAU,SAACC,OAIb,cAACmB,EAAA,EAAD,CAAQjF,QAAQ,YAAYrB,QAAS,aAArC,uBAKJ,sBAAK8B,UAAU,4BAAf,UACE,cAACV,EAAA,EAAD,CACEF,MAAM,WACNG,QAAQ,KACRC,UAAU,MACVzB,GAAI,CAAEgB,SAAU,GAJlB,8BAQA,sBAAKiB,UAAU,mCAAf,UACE,cAACiD,EAAA,EAAD,CACEjD,UAAU,cACVkD,MAAM,cACN3D,QAAQ,WACR4D,MAAO,WACPC,SAAU,SAACC,OAIb,cAACJ,EAAA,EAAD,CACEjD,UAAU,cACVkD,MAAM,aACN3D,QAAQ,WACR4D,MAAO,aACPjG,KAAK,SACLqG,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,kBAGJN,SAAU,SAACC,OAIb,cAACmB,EAAA,EAAD,CAAQjF,QAAQ,YAAYrB,QAAS,aAArC,4BAOR,sBAAK8B,UAAU,iBAAf,UACE,sBAAKA,UAAU,yBAAf,UACE,cAACV,EAAA,EAAD,CACEF,MAAM,WACNG,QAAQ,KACRC,UAAU,MACVzB,GAAI,CAAEgB,SAAU,GAJlB,4BAQA,cAAC2F,EAAA,EAAD,CAAgBlF,UAAWuD,IAA3B,SACE,eAAC4B,EAAA,EAAD,CAAO5G,GAAI,CAAE6G,SAAU,KAAO,aAAW,eAAzC,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,iCAGJ,eAACC,GAAA,EAAD,WACE,cAACF,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAWvF,UAAU,KAAKyF,MAAM,MAAhC,SACG,iBAGL,cAACH,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAWvF,UAAU,KAAKyF,MAAM,MAAhC,SACG,4BAOb,sBAAKjF,UAAU,wBAAf,UACE,cAACV,EAAA,EAAD,CACEF,MAAM,WACNG,QAAQ,KACRC,UAAU,MACVzB,GAAI,CAAEgB,SAAU,GAJlB,0BAQA,cAAC2F,EAAA,EAAD,CAAgBlF,UAAWuD,IAA3B,SACE,eAAC4B,EAAA,EAAD,CAAO5G,GAAI,CAAE6G,SAAU,KAAO,aAAW,eAAzC,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,0BACA,cAACA,EAAA,EAAD,iCAGJ,eAACC,GAAA,EAAD,WACE,eAACF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWvF,UAAU,KAAKyF,MAAM,MAAhC,SACG,WAEH,cAACF,EAAA,EAAD,CAAWvF,UAAU,KAAKyF,MAAM,MAAhC,SACG,cAGL,eAACH,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWvF,UAAU,KAAKyF,MAAM,MAAhC,SACG,eAEH,cAACF,EAAA,EAAD,CAAWvF,UAAU,KAAKyF,MAAM,MAAhC,SACG,yC,0CCZVC,I,OA1H8D,SAC3EtI,GAEA,SAASuI,EACPC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,MAAO,CAAEN,OAAMC,WAAUC,MAAKC,QAAOC,UAASC,IAAGC,KAGnD,IAAMC,EAAO,CACXR,EAAW,MAAO,MAAO,cAAe,WAAY,UAAW,IAAK,KACpEA,EAAW,MAAO,MAAO,cAAe,WAAY,WAAY,IAAK,KACrEA,EAAW,MAAO,OAAQ,SAAU,WAAY,YAAa,IAAK,KAClEA,EAAW,MAAO,MAAO,UAAW,WAAY,WAAY,GAAI,KAChEA,EAAW,MAAO,MAAO,SAAU,WAAY,WAAY,IAAK,MAGlE,OACE,cAAC,EAAD,UACE,qBAAKnF,UAAU,sBAAf,SACE,sBAAKA,UAAU,iCAAf,UACE,eAAC+C,EAAA,EAAD,CAAO/C,UAAU,oCAAjB,UACE,cAACV,EAAA,EAAD,CACEF,MAAM,WACNG,QAAQ,KACRC,UAAU,MACVzB,GAAI,CAAEgB,SAAU,GAJlB,oCAQA,sBAAKiB,UAAU,kCAAf,UACE,cAAC2D,EAAA,EAAD,CAAsBC,YAAaC,IAAnC,SACE,cAACC,EAAA,EAAD,CACEZ,MAAM,OACNC,MAAO,IAAIyC,KACXxC,SAAU,SAACC,KAGXU,YAAa,SAACC,GAAD,OACX,cAACf,EAAA,EAAD,aACEjD,UAAU,qCACNgE,SAKZ,cAACL,EAAA,EAAD,CAAsBC,YAAaC,IAAnC,SACE,cAACC,EAAA,EAAD,CACEZ,MAAM,KACNC,MAAO,IAAIyC,KACXxC,SAAU,SAACC,KAGXU,YAAa,SAACC,GAAD,OACX,cAACf,EAAA,EAAD,aACEjD,UAAU,qCACNgE,SAKZ,cAACQ,EAAA,EAAD,CAAQjF,QAAQ,YAAhB,0BAGJ,oBAAIS,UAAU,qBAAd,sCACA,cAAC0E,EAAA,EAAD,CAAgBlF,UAAWuD,IAA3B,SACE,eAAC4B,EAAA,EAAD,CAAO5G,GAAI,CAAE6G,SAAU,KAAO,aAAW,eAAzC,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,CAAWc,MAAM,SAAjB,gBACA,cAACd,EAAA,EAAD,CAAWc,MAAM,SAAjB,sBACA,cAACd,EAAA,EAAD,CAAWc,MAAM,SAAjB,oBACA,cAACd,EAAA,EAAD,CAAWc,MAAM,SAAjB,iBACA,cAACd,EAAA,EAAD,CAAWc,MAAM,SAAjB,2BACA,cAACd,EAAA,EAAD,CAAWc,MAAM,SAAjB,wBACA,cAACd,EAAA,EAAD,CAAWc,MAAM,SAAjB,oBACA,cAACd,EAAA,EAAD,CAAWc,MAAM,SAAjB,yBAGJ,cAACb,GAAA,EAAD,UACGW,EAAKG,KAAI,SAACC,GAAD,OACR,eAACjB,EAAA,EAAD,CAEE/G,GAAI,CAAE,mCAAoC,CAAEiI,OAAQ,IAFtD,UAIE,cAACjB,EAAA,EAAD,CAAWvF,UAAU,KAAKyF,MAAM,MAAhC,SACGc,EAAIX,OAEP,cAACL,EAAA,EAAD,CAAWc,MAAM,SAAjB,SAA2BE,EAAIV,WAC/B,cAACN,EAAA,EAAD,CAAWc,MAAM,SAAjB,SAA2BE,EAAIT,MAC/B,cAACP,EAAA,EAAD,CAAWc,MAAM,SAAjB,SAA2BE,EAAIR,QAC/B,cAACR,EAAA,EAAD,CAAWc,MAAM,SAAjB,SAA2BE,EAAIP,UAC/B,cAACT,EAAA,EAAD,CAAWc,MAAM,SAAjB,SAA2BE,EAAIN,IAC/B,cAACV,EAAA,EAAD,CAAWc,MAAM,SAAjB,SAA2BE,EAAIL,IAC/B,cAACX,EAAA,EAAD,CAAWc,MAAM,SAAjB,SACE,cAAC5G,EAAA,EAAD,CAAYG,MAAM,QAAQ,aAAW,SAArC,SACE,cAAC,KAAD,QAGJ,cAAC2F,EAAA,EAAD,CAAWc,MAAM,SAAjB,SACE,cAAC5G,EAAA,EAAD,CAAYG,MAAM,OAAO,aAAW,SAApC,SACE,cAAC,KAAD,UAnBC2G,EAAIX,yBC7Fda,OAXf,WACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAAC3G,UAAWK,IACjC,cAAC,IAAD,CAAOqG,KAAK,YAAY1G,UAAWU,IACnC,cAAC,IAAD,CAAOgG,KAAK,kBAAkB1G,UAAWiF,KACzC,cAAC,IAAD,CAAOyB,KAAK,sBAAsB1G,UAAW0F,SCApCkB,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,4BCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.88012e1a.chunk.js","sourcesContent":["import {\r\n  Box,\r\n  Divider,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemButton,\r\n  ListItemText,\r\n  Toolbar,\r\n} from \"@mui/material\";\r\nimport {\r\n  AddBoxOutlined,\r\n  ArticleOutlined,\r\n  DirectionsCarFilledOutlined,\r\n} from \"@mui/icons-material\";\r\nimport * as React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface DrawerComponentProps {\r\n  drawerOpen: boolean;\r\n  setDrawerState: (drawerOpen: boolean) => void;\r\n}\r\n\r\nconst DrawerComponent: React.FunctionComponent<DrawerComponentProps> = (\r\n  props\r\n) => {\r\n  let history = useHistory();\r\n  const toggleDrawer =\r\n    (open: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => {\r\n      if (\r\n        event.type === \"keydown\" &&\r\n        ((event as React.KeyboardEvent).key === \"Tab\" ||\r\n          (event as React.KeyboardEvent).key === \"Shift\")\r\n      ) {\r\n        return;\r\n      }\r\n      props.setDrawerState(false);\r\n    };\r\n  const openScreen = (screen: string) => {\r\n    if (screen === \"addEntry\") {\r\n      history.push(\"/addEntry\");\r\n    } else if (screen === \"vehicleDetails\") {\r\n      history.push(\"/vehicleDetails\");\r\n    } else if (screen === \"consolidatedReport\") {\r\n      history.push(\"/consolidatedReport\");\r\n    }\r\n  };\r\n  return (\r\n    <Drawer anchor=\"left\" open={props.drawerOpen} onClose={toggleDrawer(false)}>\r\n      <Toolbar />\r\n      <Divider />\r\n      <Box\r\n        sx={{ width: 250 }}\r\n        role=\"presentation\"\r\n        onClick={toggleDrawer(false)}\r\n        onKeyDown={toggleDrawer(false)}\r\n      >\r\n        <List>\r\n          <ListItem disablePadding>\r\n            <ListItemButton\r\n              onClick={() => {\r\n                openScreen(\"addEntry\");\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                <AddBoxOutlined />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Add New Entry\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n          <ListItem disablePadding>\r\n            <ListItemButton\r\n              onClick={() => {\r\n                openScreen(\"consolidatedReport\");\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                <ArticleOutlined />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Consolidated Report\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n          <ListItem disablePadding>\r\n            <ListItemButton\r\n              onClick={() => {\r\n                openScreen(\"vehicleDetails\");\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                <DirectionsCarFilledOutlined />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Vehicles\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n        </List>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default DrawerComponent;\r\n","import { AppBar, Badge, IconButton, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\nimport { Toolbar } from \"@mui/material\";\r\nimport \"./Header.scss\";\r\nimport { Box } from \"@mui/material\";\r\n\r\ninterface HeaderProps {\r\n  setDrawerState: (drawerOpen: boolean) => void;\r\n}\r\n\r\nconst Header: React.FunctionComponent<HeaderProps> = (props) => {\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar>\r\n        <Toolbar>\r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            sx={{ mr: 2 }}\r\n            onClick={() => props.setDrawerState(true)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            Annapurna Car Travels\r\n          </Typography>\r\n          <IconButton\r\n            size=\"large\"\r\n            aria-label=\"show 17 new notifications\"\r\n            color=\"inherit\"\r\n          >\r\n            <Badge badgeContent={3} color=\"error\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"end\"\r\n            aria-label=\"account of current user\"\r\n            aria-controls=\"primary-search-account-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={() => {\r\n              console.log(\"account log\");\r\n            }}\r\n            color=\"inherit\"\r\n          >\r\n            <AccountCircle />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport DrawerComponent from \"../Drawer/DrawerComponent\";\r\nimport Header from \"../Header/Header\";\r\nimport \"./AppPage.scss\";\r\n\r\ninterface AppPageProps {}\r\n\r\nconst AppPage: React.FunctionComponent<AppPageProps> = (props) => {\r\n  const [drawerState, setDrawerState] = useState(false);\r\n  return (\r\n    <div className=\"app-page\">\r\n      <Header\r\n        setDrawerState={(drawerOpen: boolean) => setDrawerState(drawerOpen)}\r\n      />\r\n      <div className=\"app-content\">{props.children}</div>\r\n      <DrawerComponent\r\n        drawerOpen={drawerState}\r\n        setDrawerState={(drawerOpen: boolean) => setDrawerState(drawerOpen)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppPage;\r\n","import {\r\n  Button,\r\n  FormControl,\r\n  InputAdornment,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport { DatePicker, LocalizationProvider } from \"@mui/lab\";\r\nimport \"./AddEntry.scss\";\r\nimport { TripData } from \"../../Models/TripData\";\r\nimport AppPage from \"../AppPage/AppPage\";\r\n\r\ninterface AddEntryProps {}\r\n\r\nconst AddEntry: React.FunctionComponent<AddEntryProps> = () => {\r\n  const [custName, setCustName] = useState(\"\");\r\n  const [custNum, setCustNum] = useState(0);\r\n  const [custId, setCustId] = useState(\"\");\r\n\r\n  const [journeyFrom, setJourneyFrom] = useState(\"\");\r\n  const [journeyTo, setJourneyTo] = useState(\"\");\r\n  const [journeyDate, setJourneyDate] = useState<Date | null>(null);\r\n\r\n  const [vehicleNum, setVehicleNum] = useState(\"--Select--\");\r\n  const [driverName, setDriverName] = useState(\"\");\r\n  const [driverNum, setDriverNum] = useState(0);\r\n  const [openingReading, setOpeningReading] = useState(0);\r\n  const [endReading, setEndReading] = useState(0);\r\n  const [totalReading, setTotalReading] = useState(0);\r\n\r\n  const [paymentType, setPaymentType] = useState(\"Cash\");\r\n  const [tollFee, setTollFee] = useState(0);\r\n  const [kmDriven, setKmDriven] = useState(0);\r\n  const [driverBeta, setDriverBeta] = useState(0);\r\n  const [advance, setAdvance] = useState(0);\r\n  const [parkingFee, setParkingFee] = useState(0);\r\n  const [costPerKm, setCostPerKm] = useState(0);\r\n  const [totalPay, setTotalPay] = useState(0);\r\n  const [netPay, setNetPay] = useState(0);\r\n\r\n  const [tripData, setTripData] = useState<TripData>({\r\n    custName,\r\n    custNum,\r\n    custId,\r\n    journeyFrom,\r\n    journeyTo,\r\n    journeyDate,\r\n    vehicleNum,\r\n    driverName,\r\n    driverNum,\r\n    openingReading,\r\n    endReading,\r\n    totalReading,\r\n    paymentType,\r\n    tollFee,\r\n    kmDriven,\r\n    driverBeta,\r\n    advance,\r\n    parkingFee,\r\n    costPerKm,\r\n    totalPay,\r\n    netPay,\r\n  });\r\n\r\n  const handleSubmit = () => {\r\n    setTripData({\r\n      custName,\r\n      custNum,\r\n      custId,\r\n      journeyFrom,\r\n      journeyTo,\r\n      journeyDate,\r\n      vehicleNum,\r\n      driverName,\r\n      driverNum,\r\n      openingReading,\r\n      endReading,\r\n      totalReading,\r\n      paymentType,\r\n      tollFee,\r\n      kmDriven,\r\n      driverBeta,\r\n      advance,\r\n      parkingFee,\r\n      costPerKm,\r\n      totalPay,\r\n      netPay,\r\n    });\r\n  };\r\n  console.log(tripData);\r\n  return (\r\n    <AppPage>\r\n      <div className=\"add-entry\">\r\n        <div className=\"add-entry__container\">\r\n          <div className=\"add-entry__title-div\">\r\n            <h1 className=\"add-entry__title\">Add New Entry</h1>\r\n          </div>\r\n          <Paper\r\n            elevation={5}\r\n            className=\"add-entry__customer-details details-card\"\r\n          >\r\n            <Typography\r\n              color=\"#003f7d;\"\r\n              variant=\"h6\"\r\n              component=\"div\"\r\n              sx={{ flexGrow: 1 }}\r\n            >\r\n              Customer Details:\r\n            </Typography>\r\n            <div className=\"details-card__inputs-div\">\r\n              <div>\r\n                <TextField\r\n                  className=\"entry-input\"\r\n                  label=\"Name\"\r\n                  variant=\"outlined\"\r\n                  value={custName}\r\n                  onChange={(newValue) => {\r\n                    setCustName(newValue.target.value);\r\n                  }}\r\n                />\r\n                <TextField\r\n                  className=\"entry-input\"\r\n                  label=\"Mobile\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={custNum}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">+91</InputAdornment>\r\n                    ),\r\n                  }}\r\n                  onChange={(newValue) => {\r\n                    setCustNum(+newValue.target.value);\r\n                  }}\r\n                />\r\n                <TextField\r\n                  className=\"entry-input\"\r\n                  label=\"ID Proof\"\r\n                  variant=\"outlined\"\r\n                  value={custId}\r\n                  onChange={(newValue) => {\r\n                    setCustId(newValue.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Paper>\r\n          <Paper\r\n            elevation={5}\r\n            className=\"add-entry__journey-details details-card\"\r\n          >\r\n            <Typography\r\n              color=\"#003f7d;\"\r\n              variant=\"h6\"\r\n              component=\"div\"\r\n              sx={{ flexGrow: 1 }}\r\n            >\r\n              Journey Details:\r\n            </Typography>\r\n            <div className=\"details-card__inputs-div\">\r\n              <div>\r\n                <TextField\r\n                  className=\"entry-input\"\r\n                  label=\"From\"\r\n                  variant=\"outlined\"\r\n                  value={journeyFrom}\r\n                  onChange={(newValue) => {\r\n                    setJourneyFrom(newValue.target.value);\r\n                  }}\r\n                />\r\n                <TextField\r\n                  className=\"entry-input\"\r\n                  label=\"To\"\r\n                  variant=\"outlined\"\r\n                  value={journeyTo}\r\n                  onChange={(newValue) => {\r\n                    setJourneyTo(newValue.target.value);\r\n                  }}\r\n                />\r\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                  <DatePicker\r\n                    label=\"DOJ\"\r\n                    value={journeyDate}\r\n                    onChange={(newValue) => {\r\n                      setJourneyDate(newValue);\r\n                    }}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                  />\r\n                </LocalizationProvider>\r\n              </div>\r\n            </div>\r\n          </Paper>\r\n          <Paper\r\n            elevation={7}\r\n            className=\"add-entry__vehicle-details details-card\"\r\n          >\r\n            <Typography\r\n              color=\"#003f7d;\"\r\n              variant=\"h6\"\r\n              component=\"div\"\r\n              sx={{ flexGrow: 1 }}\r\n            >\r\n              Vehicle Details:\r\n            </Typography>\r\n            <div className=\"details-card__inputs-div\">\r\n              <div>\r\n                <FormControl>\r\n                  <InputLabel id=\"vehicle-select-label\">Vehicle num</InputLabel>\r\n                  <Select\r\n                    className=\"entry-input\"\r\n                    labelId=\"vehicle-select-label\"\r\n                    value={vehicleNum}\r\n                    label=\"Vehicle num\"\r\n                    onChange={(newValue) => {\r\n                      setVehicleNum(newValue.target.value);\r\n                    }}\r\n                  >\r\n                    <MenuItem value={\"--Select--\"}>--Select--</MenuItem>\r\n                    <MenuItem value={\"AP28DS9999\"}>AP28DS9999</MenuItem>\r\n                    <MenuItem value={\"Card\"}>Card</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                <TextField\r\n                  className=\"entry-input\"\r\n                  label=\"Driver Name\"\r\n                  variant=\"outlined\"\r\n                  value={driverName}\r\n                  onChange={(newValue) => {\r\n                    setDriverName(newValue.target.value);\r\n                  }}\r\n                />\r\n                <TextField\r\n                  className=\"entry-input\"\r\n                  label=\"Driver Number\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={driverNum}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">+91</InputAdornment>\r\n                    ),\r\n                  }}\r\n                  onChange={(newValue) => {\r\n                    setDriverNum(+newValue.target.value);\r\n                  }}\r\n                />\r\n                {/* <TextField\r\n                className=\"entry-input\"\r\n                label=\"Total Reading\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n              /> */}\r\n                <TextField\r\n                  className=\"entry-input\"\r\n                  label=\"Opening Reading\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={openingReading}\r\n                  onChange={(newValue) => {\r\n                    setOpeningReading(+newValue.target.value);\r\n                  }}\r\n                />\r\n                <TextField\r\n                  className=\"entry-input\"\r\n                  label=\"End Reading\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={endReading}\r\n                  onChange={(newValue) => {\r\n                    setEndReading(+newValue.target.value);\r\n                  }}\r\n                />\r\n                <TextField\r\n                  className=\"entry-input\"\r\n                  label=\"Total Reading\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={totalReading}\r\n                  onChange={(newValue) => {\r\n                    setTotalReading(+newValue.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Paper>\r\n          <Paper\r\n            elevation={5}\r\n            className=\"add-entry__payment-details details-card\"\r\n          >\r\n            <Typography\r\n              color=\"#003f7d;\"\r\n              variant=\"h6\"\r\n              component=\"div\"\r\n              sx={{ flexGrow: 1 }}\r\n            >\r\n              Payment Details:\r\n            </Typography>\r\n            <div className=\"details-card__inputs-div\">\r\n              <div>\r\n                <FormControl>\r\n                  <InputLabel id=\"payment-type-select-label\">Type</InputLabel>\r\n                  <Select\r\n                    className=\"entry-input\"\r\n                    labelId=\"payment-type-select-label\"\r\n                    value={paymentType}\r\n                    label=\"Type\"\r\n                    onChange={(newValue) => {\r\n                      setPaymentType(newValue.target.value);\r\n                    }}\r\n                  >\r\n                    <MenuItem value={\"Cash\"}>Cash</MenuItem>\r\n                    <MenuItem value={\"UPI\"}>UPI</MenuItem>\r\n                    <MenuItem value={\"Card\"}>Card</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                <TextField\r\n                  className=\"entry-input\"\r\n                  label=\"Advance Paid\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={advance}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">₹</InputAdornment>\r\n                    ),\r\n                  }}\r\n                  onChange={(newValue) => {\r\n                    setAdvance(+newValue.target.value);\r\n                  }}\r\n                />\r\n                <TextField\r\n                  className=\"entry-input\"\r\n                  label=\"Toll Charges\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={tollFee}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">₹</InputAdornment>\r\n                    ),\r\n                  }}\r\n                  onChange={(newValue) => {\r\n                    setTollFee(+newValue.target.value);\r\n                  }}\r\n                />\r\n                <TextField\r\n                  className=\"entry-input\"\r\n                  label=\"Parking Charges\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={parkingFee}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">₹</InputAdornment>\r\n                    ),\r\n                  }}\r\n                  onChange={(newValue) => {\r\n                    setParkingFee(+newValue.target.value);\r\n                  }}\r\n                />\r\n                <TextField\r\n                  className=\"entry-input\"\r\n                  label=\"Driver Beta\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={driverBeta}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">₹</InputAdornment>\r\n                    ),\r\n                  }}\r\n                  onChange={(newValue) => {\r\n                    setDriverBeta(+newValue.target.value);\r\n                  }}\r\n                />\r\n                <TextField\r\n                  className=\"entry-input\"\r\n                  label=\"KMs driven\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={kmDriven}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">KM</InputAdornment>\r\n                    ),\r\n                  }}\r\n                  onChange={(newValue) => {\r\n                    setKmDriven(+newValue.target.value);\r\n                  }}\r\n                />\r\n                <TextField\r\n                  className=\"entry-input\"\r\n                  label=\"Cost per KM\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={costPerKm}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">₹</InputAdornment>\r\n                    ),\r\n                  }}\r\n                  onChange={(newValue) => {\r\n                    setCostPerKm(+newValue.target.value);\r\n                  }}\r\n                />\r\n                <TextField\r\n                  className=\"entry-input\"\r\n                  label=\"Net Payable\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={netPay}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">₹</InputAdornment>\r\n                    ),\r\n                  }}\r\n                  onChange={(newValue) => {\r\n                    setNetPay(+newValue.target.value);\r\n                  }}\r\n                />\r\n                <TextField\r\n                  className=\"entry-input\"\r\n                  label=\"Total\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={totalPay}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">₹</InputAdornment>\r\n                    ),\r\n                  }}\r\n                  onChange={(newValue) => {\r\n                    setTotalPay(+newValue.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Paper>\r\n          <Button variant=\"contained\" onClick={handleSubmit}>\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </AppPage>\r\n  );\r\n};\r\n\r\nexport default AddEntry;\r\n","import {\r\n  Button,\r\n  InputAdornment,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport AppPage from \"../AppPage/AppPage\";\r\nimport \"./VehiclesDetails.scss\";\r\n\r\ninterface VehiclesDetailsProps {}\r\n\r\nconst VehiclesDetails: React.FunctionComponent<VehiclesDetailsProps> = () => {\r\n  return (\r\n    <AppPage>\r\n      <div className=\"vehicles\">\r\n        <div className=\"vehicles__container\">\r\n          <Paper\r\n            elevation={5}\r\n            className=\"vehicles__vehicle-details details-card\"\r\n          >\r\n            <div className=\"details-card__inputs-div\">\r\n              <div className=\"details-card__vehicles-div\">\r\n                <Typography\r\n                  color=\"#003f7d;\"\r\n                  variant=\"h6\"\r\n                  component=\"div\"\r\n                  sx={{ flexGrow: 1 }}\r\n                >\r\n                  Add Vehicle:\r\n                </Typography>\r\n                <div className=\"details-card__inputs-div-vehicles\">\r\n                  <TextField\r\n                    className=\"entry-input\"\r\n                    label=\"Vehicle Num\"\r\n                    variant=\"outlined\"\r\n                    value={\"custName\"}\r\n                    onChange={(newValue) => {\r\n                      // setCustName(newValue.target.value);\r\n                    }}\r\n                  />\r\n                  <Button variant=\"contained\" onClick={() => {}}>\r\n                    Add\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n              <div className=\"details-card__drivers-div\">\r\n                <Typography\r\n                  color=\"#003f7d;\"\r\n                  variant=\"h6\"\r\n                  component=\"div\"\r\n                  sx={{ flexGrow: 1 }}\r\n                >\r\n                  Add Driver Data:\r\n                </Typography>\r\n                <div className=\"details-card__inputs-div-drivers\">\r\n                  <TextField\r\n                    className=\"entry-input\"\r\n                    label=\"Driver Name\"\r\n                    variant=\"outlined\"\r\n                    value={\"custName\"}\r\n                    onChange={(newValue) => {\r\n                      // setCustName(newValue.target.value);\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    className=\"entry-input\"\r\n                    label=\"Driver Num\"\r\n                    variant=\"outlined\"\r\n                    value={\"9192939495\"}\r\n                    type=\"number\"\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">+91</InputAdornment>\r\n                      ),\r\n                    }}\r\n                    onChange={(newValue) => {\r\n                      // setCustName(newValue.target.value);\r\n                    }}\r\n                  />\r\n                  <Button variant=\"contained\" onClick={() => {}}>\r\n                    Add\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Paper>\r\n          <div className=\"vehicles__divs\">\r\n            <div className=\"vehicles__divs-vehicle\">\r\n              <Typography\r\n                color=\"#003f7d;\"\r\n                variant=\"h6\"\r\n                component=\"div\"\r\n                sx={{ flexGrow: 1 }}\r\n              >\r\n                Vehicles Data:\r\n              </Typography>\r\n              <TableContainer component={Paper}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Vehicle Number</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {\"AP39BV9999\"}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {\"AP28DS1234\"}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </div>\r\n            <div className=\"vehicles__divs-driver\">\r\n              <Typography\r\n                color=\"#003f7d;\"\r\n                variant=\"h6\"\r\n                component=\"div\"\r\n                sx={{ flexGrow: 1 }}\r\n              >\r\n                Driver Data:\r\n              </Typography>\r\n              <TableContainer component={Paper}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Driver Name</TableCell>\r\n                      <TableCell>Driver Number</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {\"Rajesh\"}\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {\"Sanjay\"}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {\"9090909090\"}\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {\"9134309876\"}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </AppPage>\r\n  );\r\n};\r\n\r\nexport default VehiclesDetails;\r\n","import {\r\n  Button,\r\n  IconButton,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport AppPage from \"../AppPage/AppPage\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport CreateIcon from \"@mui/icons-material/Create\";\r\nimport \"./ConsolidatedReport.scss\";\r\nimport { DatePicker, LocalizationProvider } from \"@mui/lab\";\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\n\r\ninterface ConsolidatedReportProps {}\r\n\r\nconst ConsolidatedReport: React.FunctionComponent<ConsolidatedReportProps> = (\r\n  props\r\n) => {\r\n  function createData(\r\n    name: string,\r\n    calories: string,\r\n    fat: string,\r\n    carbs: string,\r\n    protein: string,\r\n    a: number,\r\n    b: number\r\n  ) {\r\n    return { name, calories, fat, carbs, protein, a, b };\r\n  }\r\n\r\n  const rows = [\r\n    createData(\"MCH\", \"HYD\", \"Sai Krishna\", \"Driver 1\", \"9th May\", 205, 5000),\r\n    createData(\"HYD\", \"MCH\", \"Sai Krishna\", \"Driver 1\", \"20th May\", 205, 5000),\r\n    createData(\"MCH\", \"BGLR\", \"Harish\", \"Driver 1\", \"31st June\", 480, 10000),\r\n    createData(\"MCH\", \"SPT\", \"Gargesh\", \"Driver 1\", \"9th July\", 80, 2000),\r\n    createData(\"HYD\", \"GOA\", \"Yatish\", \"Driver 1\", \"10th Aug\", 600, 20000),\r\n  ];\r\n\r\n  return (\r\n    <AppPage>\r\n      <div className=\"consolidated-report\">\r\n        <div className=\"consolidated-report__container\">\r\n          <Paper className=\"consolidated-report__filter-paper\">\r\n            <Typography\r\n              color=\"#003f7d;\"\r\n              variant=\"h6\"\r\n              component=\"div\"\r\n              sx={{ flexGrow: 1 }}\r\n            >\r\n              Filter Travel Records:\r\n            </Typography>\r\n            <div className=\"consolidated-report__filter-div\">\r\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <DatePicker\r\n                  label=\"From\"\r\n                  value={new Date()}\r\n                  onChange={(newValue) => {\r\n                    //   setJourneyDate(newValue);\r\n                  }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      className=\"consolidated-report__filter-input\"\r\n                      {...params}\r\n                    />\r\n                  )}\r\n                />\r\n              </LocalizationProvider>\r\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <DatePicker\r\n                  label=\"To\"\r\n                  value={new Date()}\r\n                  onChange={(newValue) => {\r\n                    //   setJourneyDate(newValue);\r\n                  }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      className=\"consolidated-report__filter-input\"\r\n                      {...params}\r\n                    />\r\n                  )}\r\n                />\r\n              </LocalizationProvider>\r\n              <Button variant=\"contained\">Filter</Button>\r\n            </div>\r\n          </Paper>\r\n          <h2 className=\"travel-count-title\">Total Travel Records - 5</h2>\r\n          <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>From</TableCell>\r\n                  <TableCell align=\"center\">To</TableCell>\r\n                  <TableCell align=\"center\">Customer</TableCell>\r\n                  <TableCell align=\"center\">Driver</TableCell>\r\n                  <TableCell align=\"center\">DOJ</TableCell>\r\n                  <TableCell align=\"center\">Total Reading</TableCell>\r\n                  <TableCell align=\"center\">Total Cost</TableCell>\r\n                  <TableCell align=\"center\">Delete</TableCell>\r\n                  <TableCell align=\"center\">Update</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map((row) => (\r\n                  <TableRow\r\n                    key={row.name}\r\n                    sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                  >\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.name}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">{row.calories}</TableCell>\r\n                    <TableCell align=\"center\">{row.fat}</TableCell>\r\n                    <TableCell align=\"center\">{row.carbs}</TableCell>\r\n                    <TableCell align=\"center\">{row.protein}</TableCell>\r\n                    <TableCell align=\"center\">{row.a}</TableCell>\r\n                    <TableCell align=\"center\">{row.b}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <IconButton color=\"error\" aria-label=\"delete\">\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <IconButton color=\"info\" aria-label=\"delete\">\r\n                        <CreateIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n      </div>\r\n    </AppPage>\r\n  );\r\n};\r\n\r\nexport default ConsolidatedReport;\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport AddEntry from \"./Components/AddEntry/AddEntry\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport AppPage from \"./Components/AppPage/AppPage\";\nimport VehiclesDetails from \"./Components/VehiclesDetails/VehiclesDetails\";\nimport ConsolidatedReport from \"./Components/ConsolidatedReport/ConsolidatedReport\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Route path=\"/\" exact component={AppPage} />\n      <Route path=\"/addEntry\" component={AddEntry} />\n      <Route path=\"/vehicleDetails\" component={VehiclesDetails} />\n      <Route path=\"/consolidatedReport\" component={ConsolidatedReport} />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"@fontsource/roboto/300.css\";\nimport \"@fontsource/roboto/400.css\";\nimport \"@fontsource/roboto/500.css\";\nimport \"@fontsource/roboto/700.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}